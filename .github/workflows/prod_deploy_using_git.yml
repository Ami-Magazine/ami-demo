# This workflow will
# - Build the code
# - Deploy to the server
#
# The following steps are taken for deploying on the server
#
# - SSH into the server
# - Pull the latest code
# - Run npm ci
# - Run npm run build
# - Restart the pm2 server

name: Prod - Deploy using Git

on:
  push:
    branches: [main]

env:
  PROD_SSH_KEY: ${{ secrets.PROD_SSH_KEY }}
  PROD_SSH_HOST: ${{ secrets.PROD_SSH_HOST }}
  PROD_SSH_PORT: ${{ secrets.PROD_SSH_PORT }}
  PROD_SSH_USER: ${{ secrets.PROD_SSH_USER }}
  PROD_PROJECT_PATH: ${{ secrets.PROD_PROJECT_PATH }}
  PROD_PM2_NAME: ${{ secrets.PROD_PM2_NAME }}

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'npm'
      - run: npm ci
      - run: npm run build --if-present
      - name: Clone code and build
        run: |
          eval $(ssh-agent -s)
          echo "$PROD_SSH_KEY" | tr -d '\r' | ssh-add -
          mkdir -p ~/.ssh
          chmod 700 ~/.ssh
          ssh-keyscan -p $PROD_SSH_PORT $PROD_SSH_HOST >> ~/.ssh/known_hosts
          chmod 644 ~/.ssh/known_hosts
          ssh $PROD_SSH_USER@$PROD_SSH_HOST -p $PROD_SSH_PORT "cd $PROD_PROJECT_PATH && git pull --rebase"
          ssh $PROD_SSH_USER@$PROD_SSH_HOST -p $PROD_SSH_PORT "cd $PROD_PROJECT_PATH && npm ci"
          ssh $PROD_SSH_USER@$PROD_SSH_HOST -p $PROD_SSH_PORT "cd $PROD_PROJECT_PATH && npm run build"
          ssh $PROD_SSH_USER@$PROD_SSH_HOST -p $PROD_SSH_PORT "cd $PROD_PROJECT_PATH && pm2 restart $PROD_PM2_NAME"
